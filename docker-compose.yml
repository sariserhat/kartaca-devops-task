version: '3.8'
services:
  goapp:
    container_name: goapp
    build: ./goapp
    ports:
    - 5555:5555
    labels:
      - "traefik.http.routers.goapp.rule=(Host(`kartaca.localhost`) && Path(`/goapp`))"
      - "traefik.http.middlewares.routego.replacepath.path=/staj"
      - "traefik.http.routers.goapp.middlewares=routego"
    environment:
      CONNECTION_URI: "mongodb://mongo:27017"
      DB_NAME: "stajdb"
      COLLECTION_NAME: "ulkeler"
    depends_on:
    - mongo
    - traefik

  pythonapp:
    container_name: pythonapp
    build: ./pythonapp
    ports:
    - 4444:4444
    labels:
      - "traefik.http.routers.pythonapp.rule=(Host(`kartaca.localhost`) && Path(`/pythonapp`))"
      - "traefik.http.middlewares.routepython.replacepath.path=/staj"
      - "traefik.http.routers.pythonapp.middlewares=routepython"
    environment:
      CONNECTION_URI: "mongodb://mongo:27017"
      DB_NAME: "stajdb"
      COLLECTION_NAME: "iller"
    depends_on:
    - mongo
    - traefik

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    depends_on:
    - node_exporter

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  grafana:
    image: grafana/grafana:9.4.2
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`kartaca.localhost`) && Path(`/grafana`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    restart: always
    depends_on:
      - prometheus

  traefik:
    image: traefik:v2.9
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - grafana

  mongo:
    container_name: mongo
    image: mongo:5
    environment:
      - MONGO_INITDB_ROOT_USERNAME = kartaca
      - MONGO_INITDB_ROOT_PASSWORD = kartaca
      - MONGO_INITDB_DATABASE=stajdb
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
    - 27017:27017


# I was able to create replica set but could not initialize it with init script.
# I encountered an error similar to this issue which i could not figure out:
# https://github.com/docker-library/mongo/issues/339
#
#  mongo1:
#    image: mongo:5
#    container_name: mongo1
#    command: "--replSet kartaca-set --bind_ip_all  --port 30001"
#    ports:
#      - 30001:30001
#    healthcheck:
#      test: test $$(echo "rs.initiate({_id:'kartaca-set',members:[{_id:0,host:\"mongo1:30001\",priority:2},{_id:1,host:\"mongo2:30002\",priority:3},{_id:2,host:\"mongo3:30003\",priority:1}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
#      interval: 10s
#      start_period: 20s
#    depends_on:
#    - mongo2
#    - mongo3

#  mongo2:
#    image: mongo:5
#    container_name: mongo2
#    command: "--replSet kartaca-set --bind_ip_all  --port 30002"
#    ports:
#      - 30002:30002 

#  mongo3:
#    image: mongo:5
#    container_name: mongo3
#    command: "--replSet kartaca-set --bind_ip_all  --port 30003"
#    ports:
#      - 30003:30003

